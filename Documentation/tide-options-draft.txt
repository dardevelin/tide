side-note: - short versions often don't need the dash '-' prefix

### configures the default text editor and default opening arguments
    tide --config --editor "editor default-args _files_"
    tide --config --owner "author"
    tide --config --contact "contacts"

    ### short version
    tide --config --owner "Darcy Br√°s da Silva" --contact "email@address.tld" --editor "emacs -nw _files_"

note:
    : --editor,--owner,--contact act mostly as flags, this means
    : they can be passed in any combination as long as they are followed
    : by their respective expected argument_data surrounded by quotes ''or""
    :
    : '_files_' is the place where the list of files will be passed
    : this is because some editors don't allow random order of arguments
    :
    : if your editor does not allow a list of files as
    : argument you need to use the '_foreach_file_' flag instead.
    :
    : tide --config options are saved in a tide.conf file which is
    : shared across projects.

### initializes a project
    tide init

### opens the default text editor for such
    tide edit filename.ext

    ### short version
    	tide filename.ext

### creates a build-target where 'sample' is the target
    tide --set-context sample

    ### short versions
    	tide -ctx sample
	tide ctx sample
	tide context sample

### creates a sub-context demo which inherits from a parent sample
    tide --set-context "demo" --parent "sample"
    tide --set-context "sample" --custom demo

note: both commands are equivalent

internal_note: this creates a context which has special naming convention
             : in the .tide file where the project information is stored
             : in the above example demo is a new named context which inherits
             : all sample builds, changes in sample also affect demo.
             : the goal is to allow demo to add aditional rules (eg platform,
	     : specific flags) to be added and built only in such context

### sets an external project to build as a context
    tide --set-context path_to_project --import-context

    ### short versions (combos)
    	tide -ctx path_to_context -ic
	tide -ctx -ic path_to_context

     # preferred way
	tide import context path_to_context

note: '--import-context' is a flag, thus it's position should not matter
    : the flag can also be used as 'import'
    :
    : also note that this is not the same as dependency

### switches contexts
    tide --context-switch sample

    ### short version [preferred way]
    	tide switch sample

### renames a context (assumes current context)
    tide --rename new_name
    tide rename new_name

note: this acts as a flag which requires one argument that is the "new name"
    : however it can still be called chained with a context switch
    : performing the switch and then applying the rename
    : 		 tide switch sample rename demo

### add/associate a file to current context
    tide add filename

### rm/de-associate a file from current context
    tide remove filename
    tide rm filename

### renames a file associated in all contexts
    tide rename filename newfilename

### set a dependency for build time (prior to current context being built)
    tide --set-build-dependency "another-context"

    ### short version [preffered way]
    	tide add-dep "another-context"

note: "another-context" is a previously created/imported context.

side-note: the recommended flow is using 'git' and using
         : git sub-modules as a way of managing external dependencies

### removes a dependency from the current context build
    tide --remove-build-dependency "context-to-remove"

    ### short version [preferred way]
    	tide rm-dep "context-to-remove"


[ this is functionality is not confirmed yet and is possible to change ]
### configures install-paths (assumes current context)
    tide --set-install-path "path"

    ### short version
    	tide -ipath "path"

note: it is also possible to chain this command with switch
switching the context first and then applying ipath to the new selected
context.

      tide switch sample -ipath "path"

### builds a project
    tide build

### builds a part/target of a project
    tide build sample

    ### short version
    	tide sample

### builds a dependency of a project
    tide build-dep name


